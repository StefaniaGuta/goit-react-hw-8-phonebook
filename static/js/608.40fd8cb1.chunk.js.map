{"version":3,"file":"static/js/608.40fd8cb1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/PageContacts/PageContacts.module.css?ddc4","pages/PageContacts/PageContacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__label\":\"ContactForm_form__label__8W82B\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__btn\":\"ContactForm_form__btn__WXQ4e\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import { useState } from 'react';\nimport styles from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\nimport { addContact }  from '../../redux/contacts/contactOperations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isInContacts = contacts.some(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n\n    if (isInContacts) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    if(number.length !== 10){\n      alert('Your contact need to have 10 numbers');\n      return;\n    };\n\n    const NumberExistInTheList = contacts.some(\n      contact => contact.number.trim() === number.trim()\n    );\n\n    if(NumberExistInTheList){\n      alert(`${number} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <section className={styles.form}>\n    <form className={styles.form__container} onSubmit={handleSubmit}>\n      <label className={styles.form__label}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name} \n        className={styles.form__input}\n        onChange={handleChange}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        placeholder=\"Enter name\"\n        required\n      />\n      <label className={styles.form__label}>Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        value={number} \n        className={styles.form__input}\n        onChange={handleChange}\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        placeholder=\"Enter phone number\"\n        required\n      />\n      <button className={styles.form__btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  </section>\n  );\n};\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"List\":\"ContactList_List__gG+lN\",\"ContactsList\":\"ContactList_ContactsList__ps99x\",\"button\":\"ContactList_button__7kL4l\"};","import React from 'react';\nimport styles from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/contactsSelectors';\nimport { deleteContact } from '../../redux/contacts/contactOperations';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  return (\n    <ul className={styles.list}>\n    {contacts.map(({ id, name, number }) => {\n      return (\n        <li className={styles.ContactsList} key={id}> \n          {name}: {number}\n          <button className={styles.button} type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </button>\n        </li>\n      );\n    })}\n  </ul>\n  );\n};\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Filter_text__uqQRu\",\"filerNumber\":\"Filter_filerNumber__P+Kgl\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/contactsSelectors';\nimport { changeFilter } from '../../redux/contacts/filterSlice';\n\nimport style from './Filter.module.css'\n\nconst Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    const normalizedValue = event.target.value.toLowerCase();\n\n    dispatch(changeFilter(normalizedValue));\n  };\n\n  return (\n    <>\n    <label className={style.text}>You can find contacts by name or phone number</label>\n    <input className={style.filerNumber} \n    value={value} \n    type=\"text\" \n    name=\"filter\" \n    placeholder=\"Enter contact name\"\n    onChange={onChange} />\n  </>\n  );\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"PageContactSection\":\"PageContacts_PageContactSection__eZzbp\",\"PageContactTitle\":\"PageContacts_PageContactTitle__I60-4\"};","import ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport style from './PageContacts.module.css';\n\nfunction PageContacts() {\n  return (\n    <section className={style.PageContactSection}>\n      <h1 className={style.PageContactTitle}>YOUR PHONEBOOK</h1>\n      <h2>Add new contact</h2>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </section>\n  );\n}\n\nexport default PageContacts;"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","_event$target","target","value","_jsx","className","styles","children","_jsxs","onSubmit","preventDefault","some","trim","alert","concat","length","addContact","type","onChange","title","placeholder","required","map","_ref","id","onClick","deleteContact","_Fragment","style","normalizedValue","changeFilter","ContactForm","Filter","ContactList"],"sourceRoot":""}